---
# - name: Install prerequisites
#   hosts: condor
#   become: true
#   tasks:
#     - name: Get pip
#       ansible.builtin.package:
#         name: "python3-pip"
#         state: "present"
#     # - name: Get docker
#     #   ansible.builtin.pip:
#     #     name: "docker"
#     #     state: present
#     #     executable: "pip3"

# - name: Vars
#   hosts: condor
#   vars:
#     condor_admin: "{{ condor.admin }}"
#     condor_uid_domain: "{{ condor.uid_domain }}"
#     condor_filesystem_domain: "{{ condor.filesystem_domain }}"
#     condor_collector_name: "{{ condor.collector_name }}"
#     condor_allow_read: "{{ condor.allow_read }}"
#     condor_allow_write: "{{ condor.allow_write }}"
#     condor_exec_dir: "{{ condor.exec_dir }}"
#     condor_password: "{{ condor.password }}"
#
- name: Condor manager
  hosts: condor_manager
  become: true
  roles:
    # - role: timezone
    # - role: docker
    # - role: docker-compose
    - role: condor_masuex
      vars:
        condor_role: "central_manager"
    # - role: de-docker-logging-plugin
    # - role: de-image-janitor
    # - role: de-network-pruner
    # - role: de-road-runner

- name: Condor submit
  hosts: condor_submit
  become: true
  roles:
    - role: timezone
    # - role: docker
    # - role: docker-compose
    - role: condor_masuex
      vars:
        condor_role: "submit"
    # - role: de-docker-logging-plugin
    # - role: de-image-janitor
    # - role: de-network-pruner
    # - role: de-road-runner

- name: Condor worker
  hosts: condor_worker
  become: true
  roles:
    - role: timezone
    # - role: docker
    # - role: docker-compose
    - role: condor_masuex
      vars:
        condor_role: "execute"
    # - role: de-docker-logging-plugin
    # - role: de-image-janitor
    # - role: de-network-pruner
    # - role: de-road-runner

- name: Log into required docker registries
  hosts: condor
  become: true
  become_user: condor
  tasks:
    - command: "docker login -u {{ item.user }} -p {{ item.password | quote }} {{ item.host }}"
      loop: "{{ docker_registries }}"
      when: docker_registries is defined


